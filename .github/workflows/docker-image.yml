name: Build and Push Docker Image

on:
  push:
    branches: [main, production]
  # pull_request:
  #   branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: |
          docker build \
            --build-arg PORT=${{ secrets.PORT }} \
            --build-arg API_KEY=${{ secrets.API_KEY }} \
            --build-arg PREFIX=${{ secrets.PREFIX }} \
            --build-arg FRONTEND_URL=${{ secrets.FRONTEND_URL }} \
            --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --build-arg JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }} \
            --build-arg REFRESH_JWT_SECRET=${{ secrets.REFRESH_JWT_SECRET }} \
            --build-arg REFRESH_JWT_EXPIRES_IN=${{ secrets.REFRESH_JWT_EXPIRES_IN }} \
            --build-arg MAIL_JWT_SECRET=${{ secrets.MAIL_JWT_SECRET }} \
            --build-arg MAIL_JWT_EXPIRES_IN=${{ secrets.MAIL_JWT_EXPIRES_IN }} \
            --build-arg PASSWORD_JWT_SECRET=${{ secrets.PASSWORD_JWT_SECRET }} \
            --build-arg PASSWORD_JWT_EXPIRES_IN=${{ secrets.PASSWORD_JWT_EXPIRES_IN }} \
            --build-arg DATABASE_URI=${{ secrets.DATABASE_URI }} \
            --build-arg DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
            --build-arg DEFAULT_USER_NAME=${{ secrets.DEFAULT_USER_NAME }} \
            --build-arg DEFAULT_USER_ROLE=${{ secrets.DEFAULT_USER_ROLE }} \
            --build-arg DEFAULT_USER_EMAIL=${{ secrets.DEFAULT_USER_EMAIL }} \
            --build-arg DEFAULT_USER_PASSWORD=${{ secrets.DEFAULT_USER_PASSWORD }} \
            --build-arg MAIL_HOST=${{ secrets.MAIL_HOST }} \
            --build-arg MAIL_USER=${{ secrets.MAIL_USER }} \
            --build-arg MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
            --build-arg MAIL_FROM=${{ secrets.MAIL_FROM }} \
            --build-arg MAIL_PORT=${{ secrets.MAIL_PORT }} \
            --build-arg BCRYPTJS_SALT_ROUNDS=${{ secrets.BCRYPTJS_SALT_ROUNDS }} \
            -f Dockerfile.prod --target production \
            -t ${{ secrets.DOCKER_USERNAME }}/api-gifty-nestjs-production:${{ github.sha }} .
        # github.sha
        # Esta variable es automática y la proporciona GitHub en cada ejecución de GitHub Actions.
        # Representa el hash del commit actual, útil para etiquetar imágenes de Docker con un identificador único

      - name: Tag the Docker image
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/api-gifty-nestjs-production:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/api-gifty-nestjs-production:latest

      - name: Push the Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/api-gifty-nestjs-production:latest
